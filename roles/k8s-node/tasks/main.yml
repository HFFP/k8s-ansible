
- name: get kubeconfig file
  synchronize: src="{{item.src}}" dest="{{item.dest}}"
  delegate_to: "{{groups['main'][0]}}"
  with_items:
    - { src: "/etc/kubernetes/bootstrap.kubeconfig", dest: "/etc/kubernetes/bootstrap.kubeconfig"}
    - { src: "/etc/kubernetes/kube-proxy.kubeconfig", dest: "/etc/kubernetes/kube-proxy.kubeconfig"}

- name: install flannel conntrack
  yum: 
    name: "{{item}}"
  with_items:
  - flannel
  - conntrack-tools

- name: copy config file
  copy: 
    src: "{{item.src}}"
    dest: "{{item.dest}}"
  with_items:
    - {src: "flanneld.service", dest: "/usr/lib/systemd/system/"}
    - {src: "kubelet.service", dest: "/usr/lib/systemd/system/"}
    - {src: "kube-proxy.service", dest: "/usr/lib/systemd/system/"}

- name: generate config by template
  template: src="{{item.src}}" dest="{{item.dest}}"
  with_items:
    - {src: "flanneld.j2", dest: "/etc/sysconfig/flanneld"}
    - {src: "kubelet.j2", dest: "/etc/kubernetes/kubelet"}
    - {src: "config.j2", dest: "/etc/kubernetes/config"}
    - {src: "proxy.j2", dest: "/etc/kubernetes/proxy"}

- name: create kubelet directory
  file: path="{{item}}" state=directory
  with_items:
    - /var/lib/kubelet

- name: start service
  systemd:
    daemon_reload: yes
    enabled: true
    state: restarted
    name: "{{item}}"
  with_items: ["flanneld", "kubelet", "kube-proxy"]

- name: create k8s server bin
  shell: |
    sed -i 's/\[Service\]/[Service]\nEnvironmentFile=-\/run\/flannel\/docker/' /usr/lib/systemd/system/docker.service
  args:
    executable: /bin/bash

- name: start docker
  systemd:
    daemon_reload: yes
    enabled: true
    state: restarted
    name: "{{item}}"
  with_items: ["docker",]

