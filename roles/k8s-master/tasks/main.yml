- name: install cfssl
  get_url: 
    url: "{{item.url}}"
    dest: "{{item.dest}}" 
    mode: "u+x"
  with_items:
    - {url: 'https://pkg.cfssl.org/R1.2/cfssl_linux-amd64', dest: '/usr/local/bin/cfssl'}
    - {url: 'https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64', dest: '/usr/local/bin/cfssljson'}
    - {url: 'https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64', dest: '/usr/local/bin/cfssl-certinfo'}

- name: creates ssl directory
  file: path="{{item}}" state=directory
  with_items:
    - /root/ssl
    - /etc/kubernetes/ssl

- name: copy ssl configuration file 
  copy:
    src: "{{item}}"
    dest: /root/ssl
  with_items:
    - "admin-csr.json"
    - "ca-config.json"
    - "ca-csr.json"
    - "kube-proxy-csr.json"

- name: generate ssl configuration file 
  template:
    src: "{{item}}"
    dest: /root/ssl/kubernetes-csr.json
  with_items:
    - "kubernetes-csr.json.j2"

- name: create certicicate
  shell: |
    cd /root/ssl
    cfssl gencert -initca ca-csr.json | cfssljson -bare ca
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes  kube-proxy-csr.json | cfssljson -bare kube-proxy
    cp *.pem /etc/kubernetes/ssl
  args:
    executable: /bin/bash


